{"version":3,"file":"main.c7bb682fb803c1632825.js","mappings":"mBAEA,MAAMA,EAAYC,SAASC,cAAc,uBCmBlC,SAASC,EAAeC,EAASC,GACpC,MAAMC,EAAO,IAAIC,KAAe,IAAVH,GAEhBI,EAAU,CAAC,EAgBjB,MAde,aAAXH,GACAG,EAAQC,QAAU,OAClBD,EAAQE,MAAQ,OAChBF,EAAQG,IAAM,UACdH,EAAQI,KAAO,UACfJ,EAAQK,KAAO,UACfL,EAAQM,OAAS,UACjBN,EAAQO,QAAS,GACC,SAAXV,IACPG,EAAQK,KAAO,UACfL,EAAQM,OAAS,UACjBN,EAAQO,QAAS,GAGdT,EAAKU,mBAAmB,QAASR,EAC5C,CAEO,SAASS,EAAgBC,GAC5B,OAAQA,EAAO,QAAQC,QAAQ,EACnC,CCzBAC,eAAeC,EAAuBC,GAClC,MAAMC,QFjBHH,eAAgCE,GACnC,MAAME,EAAM,qDAAqDF,2CAEjEtB,EAAUyB,MAAMC,QAAU,OAE1B,IACI,MAAMC,QAAiBC,MAAMJ,EAAK,CAAEK,OAAQ,QAE5C,OAAKF,EAASG,SASDH,EAASI,QARlBC,QAAQC,MACJ,IAAIC,MACA,iCAAiCP,EAASQ,4BAA4BR,EAASS,YAGhF,KAIf,CAAE,MAAOH,GAEL,OADAD,QAAQC,MAAM,IAAIC,MAAM,kDAAkDD,EAAMI,YACzE,IACX,CAAE,QACErC,EAAUyB,MAAMC,QAAU,MAC9B,CACJ,CEPuBY,CAAiBhB,GChBjC,IAA2BiB,EF8CFC,EC5BxBjB,IClB0BgB,EFH3B,SAA4BhB,GAC/B,MAAO,CACHkB,KAAMlB,EAAKkB,KACXD,QAASjB,EAAKmB,IAAIF,QAClBG,QAASpB,EAAKmB,IAAIC,QAClBC,OAAQrB,EAAKmB,IAAIE,OACjBC,SAAUtB,EAAKuB,GACfC,YAAaxB,EAAKyB,QAAQ,GAAGD,YAC7BE,KAAM1B,EAAKyB,QAAQ,GAAGC,KACtB/B,KAAMK,EAAK2B,KAAKhC,KAChBiC,UAAW5B,EAAK2B,KAAKE,WACrBC,QAAS9B,EAAK2B,KAAKI,SACnBC,QAAShC,EAAK2B,KAAKM,SACnBC,SAAUlC,EAAK2B,KAAKO,SACpBC,SAAUnC,EAAK2B,KAAKQ,SACpBC,UAAWpC,EAAKqC,KAAKC,MAE7B,CCK0BC,CAAmBvC,GClBRtB,SAASC,cAAc,6BAE/B6D,UAAY,6IAGExB,EAAKE,SFwChBD,EExCyCD,EAAKC,QFyCnE,IAAIwB,KAAKC,aAAa,CAAC,MAAO,CAAEC,KAAM,WAAYC,GAAG3B,gHEtCrBrC,EAAeoC,EAAKM,SAAU,+IAGnBN,EAAKQ,qLAGwBR,EAAKU,mFAClChC,EAAgBsB,EAAKrB,0SAMjBD,EAAgBsB,EAAKY,iOAIrBlC,EAAgBsB,EAAKc,+NAIrBpC,EAAgBsB,EAAKgB,gOAIrBhB,EAAKoB,iOAILpB,EAAKmB,6NAILnB,EAAKkB,+NAILtD,EAAeoC,EAAKI,QAAS,yNAI7BxC,EAAeoC,EAAKK,OAAQ,wDD7BtF,CAnBIvB,EAAuB,aAI3B,WACI,MAAM+C,EAAOnE,SAASC,cAAc,gBAEpCkE,EAAKC,iBAAiB,UAAWC,IAC7BA,EAAMC,iBACNlD,EAAuB,IAAImD,SAASJ,GAAMK,IAAI,YAAY,GAElE,CAVIC,E","sources":["webpack://weather-app/./src/app/fetchWeatherData.js","webpack://weather-app/./src/app/utils.js","webpack://weather-app/./src/app/app.js","webpack://weather-app/./src/app/renderWeatherInfo.js"],"sourcesContent":["'use strict';\n\nconst loadingEl = document.querySelector('.loading-background');\n\nexport async function fetchWeatherData(location) {\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&appid=9d1f26064e9960150b7fcf0b4bc95725`;\n\n    loadingEl.style.display = 'grid';\n\n    try {\n        const response = await fetch(url, { method: 'GET' });\n\n        if (!response.ok) {\n            console.error(\n                new Error(\n                    `Failed to fetch weather data: ${response.statusText} (Status Code: ${response.status})`\n                )\n            );\n            return null;\n        }\n\n        return await response.json();\n    } catch (error) {\n        console.error(new Error(`An error occurred while fetching weather data: ${error.message}`));\n        return null;\n    } finally {\n        loadingEl.style.display = 'none';\n    }\n}\n","'use strict';\n\nexport function extractWeatherInfo(data) {\n    return {\n        name: data.name,\n        country: data.sys.country,\n        sunrise: data.sys.sunrise,\n        sunset: data.sys.sunset,\n        datetime: data.dt,\n        description: data.weather[0].description,\n        icon: data.weather[0].icon,\n        temp: data.main.temp,\n        feelslike: data.main.feels_like,\n        tempMin: data.main.temp_min,\n        tempMax: data.main.temp_max,\n        pressure: data.main.pressure,\n        humidity: data.main.humidity,\n        windspeed: data.wind.speed\n    };\n}\n\nexport function formatDateTime(seconds, format) {\n    const date = new Date(seconds * 1000);\n\n    const options = {};\n\n    if (format === 'datetime') {\n        options.weekday = 'long';\n        options.month = 'long';\n        options.day = 'numeric';\n        options.year = 'numeric';\n        options.hour = 'numeric';\n        options.minute = 'numeric';\n        options.hour12 = true;\n    } else if (format === 'time') {\n        options.hour = 'numeric';\n        options.minute = 'numeric';\n        options.hour12 = true;\n    }\n\n    return date.toLocaleTimeString('en-US', options);\n}\n\nexport function kelvinToCelsius(temp) {\n    return (temp - 273.15).toFixed(1);\n}\n\nexport function kelvinTofahrenheit(temp) {\n    return ((temp - 273.15) * (9 / 5) + 32).toFixed(1);\n}\n\nexport function fullCountryName(country) {\n    return new Intl.DisplayNames(['en'], { type: 'region' }).of(country);\n}\n","'use strict';\n\nimport { fetchWeatherData } from './fetchWeatherData.js';\nimport { renderWeatherInfo } from './renderWeatherInfo.js';\nimport { extractWeatherInfo } from './utils.js';\n\nexport function app() {\n    displayWeatherForecast('kokrajhar');\n    searchLocationListener();\n}\n\nfunction searchLocationListener() {\n    const form = document.querySelector('#search-form');\n\n    form.addEventListener('submit', (event) => {\n        event.preventDefault();\n        displayWeatherForecast(new FormData(form).get('location'));\n    });\n}\n\nasync function displayWeatherForecast(location) {\n    const data = await fetchWeatherData(location);\n\n    if (data) {\n        renderWeatherInfo(extractWeatherInfo(data));\n    }\n}\n","'use strict';\n\nimport { formatDateTime, kelvinToCelsius, fullCountryName } from './utils.js';\n\n// Renders the current weather info to the page.\nexport function renderWeatherInfo(info) {\n    const weatherForecastSectionEl = document.querySelector('.weather-forecast-section');\n\n    weatherForecastSectionEl.innerHTML = `\n        <div class=\"weather-forecast-info-section-1\">\n            <div class=\"location-box\">\n                <p class=\"location-text\">${info.name}, ${fullCountryName(info.country)}</p>\n            </div>\n            <div class=\"datetime-box\">\n                <p class=\"datetime-text\">${formatDateTime(info.datetime, 'datetime')}</p>\n            </div>\n            <div class=\"weather-description-box\">\n                <p class=\"weather-description-text\">${info.description}</p>\n            </div>\n            <div class=\"weather-icon-and-temperature-box\">\n                <img class=\"weather-icon\" src=\"https://openweathermap.org/img/wn/${info.icon}@4x.png\" alt=\"icon\" />\n                <p class=\"weather-temperature-text\">${kelvinToCelsius(info.temp)} &#176;C</p>\n            </div>\n        </div>\n        <div class=\"weather-forecast-info-section-2\">\n            <div class=\"weather-additional-info-box\">\n                <p class=\"weather-additional-info-header\">Feels like</p>\n                <p class=\"weather-additional-info-text\">${kelvinToCelsius(info.feelslike)} &#176;C</p>\n            </div>\n            <div class=\"weather-additional-info-box\">\n                <p class=\"weather-additional-info-header\">Min</p>\n                <p class=\"weather-additional-info-text\">${kelvinToCelsius(info.tempMin)} &#176;C</p>\n            </div>\n            <div class=\"weather-additional-info-box\">\n                <p class=\"weather-additional-info-header\">Max</p>\n                <p class=\"weather-additional-info-text\">${kelvinToCelsius(info.tempMax)} &#176;C</p>\n            </div>\n            <div class=\"weather-additional-info-box\">\n                <p class=\"weather-additional-info-header\">Wind</p>\n                <p class=\"weather-additional-info-text\">${info.windspeed} m/s</p>\n            </div>\n            <div class=\"weather-additional-info-box\">\n                <p class=\"weather-additional-info-header\">Humidity</p>\n                <p class=\"weather-additional-info-text\">${info.humidity}%</p>\n            </div>\n            <div class=\"weather-additional-info-box\">\n                <p class=\"weather-additional-info-header\">Pressure</p>\n                <p class=\"weather-additional-info-text\">${info.pressure} hPa</p>\n            </div>\n            <div class=\"weather-additional-info-box\">\n                <p class=\"weather-additional-info-header\">Sunrise</p>\n                <p class=\"weather-additional-info-text\">${formatDateTime(info.sunrise, 'time')}</p>\n            </div>\n            <div class=\"weather-additional-info-box\">\n                <p class=\"weather-additional-info-header\">Sunset</p>\n                <p class=\"weather-additional-info-text\">${formatDateTime(info.sunset, 'time')}</p>\n            </div>\n        </div>\n    `;\n}\n"],"names":["loadingEl","document","querySelector","formatDateTime","seconds","format","date","Date","options","weekday","month","day","year","hour","minute","hour12","toLocaleTimeString","kelvinToCelsius","temp","toFixed","async","displayWeatherForecast","location","data","url","style","display","response","fetch","method","ok","json","console","error","Error","statusText","status","message","fetchWeatherData","info","country","name","sys","sunrise","sunset","datetime","dt","description","weather","icon","main","feelslike","feels_like","tempMin","temp_min","tempMax","temp_max","pressure","humidity","windspeed","wind","speed","extractWeatherInfo","innerHTML","Intl","DisplayNames","type","of","form","addEventListener","event","preventDefault","FormData","get","searchLocationListener"],"sourceRoot":""}